from debugpy import configure
from Agent import *
from Action import *
import time
import random
import matplotlib



hjMax  = {
            'hj1' :  120.0,
            'hj2' :   45.0,
            'raj1':  120.0,
            'raj2':    1.0,
            'raj3':  120.0,
            'raj4':   90.0,
            'laj1':  120.0,
            'laj2':   95.0,
            'laj3':  120.0,
            'laj4':    1.0,
            'rlj1':    1.0,
            'rlj2':   25.0,
            'rlj3':  100.0,
            'rlj4':    1.0,
            'rlj5':   75.0,
            'rlj6':   45.0,
            'llj1':    1.0,
            'llj2':   45.0,
            'llj3':  100.0,
            'llj4':    1.0,
            'llj5':   75.0,
            'llj6':   25.0,} 


hjMin      = {
                'hj1' : -120.0,
                'hj2' :  -45.0,
                'raj1': -120.0,
                'raj2':  -95.0,
                'raj3': -120.0,
                'raj4':   -1.0,
                'laj1': -120.0,
                'laj2':   -1.0,
                'laj3': -120.0,
                'laj4':  -90.0,
                'rlj1':  -90.0,
                'rlj2':  -45.0,
                'rlj3':  -25.0,
                'rlj4': -130.0,
                'rlj5':  -45.0,
                'rlj6':  -25.0,
                'llj1':  -90.0,
                'llj2':  -25.0,
                'llj3':  -25.0,
                'llj4': -130.0,
                'llj5':  -45.0,
                'llj6':  -45.0,}




def get_random_config():
    lj1 = (random.uniform(hjMin['rlj1'], hjMax['rlj1']), random.uniform(hjMin['rlj1'], hjMax['rlj1']))
    lj3 = (random.uniform(hjMin['rlj3'], hjMax['rlj3']), random.uniform(hjMin['rlj3'], hjMax['rlj3']))
    lj4 = (random.uniform(hjMin['rlj4'], hjMax['rlj4']), random.uniform(hjMin['rlj4'], hjMax['rlj4']))
    lj5 = (random.uniform(hjMin['rlj5'], hjMax['rlj5']), random.uniform(hjMin['rlj5'], hjMax['rlj5']))
    lj6 =  (random.uniform(hjMin['rlj6'], hjMax['rlj6']), random.uniform(hjMin['rlj6'], hjMax['rlj6']))
    
    return {
            "rlj1":[lj1[0], lj1[1]],
            "llj1":[lj1[1], lj1[0]],
            "rlj3":[lj3[0], lj3[1]],
            "rlj4":[lj4[0], lj4[1]],
            "rlj5":[lj5[0], lj5[1]],
            "llj3":[lj3[1], lj3[0]],
            "llj4":[lj4[1], lj4[0]],
            "llj5":[lj5[1], lj5[0]],
            "rlj6":[lj6[0], lj6[1]],
            "llj6":[lj6[1], lj6[0]],
            }

def congigure_vector(vector):
    return {
        "rlj1": [vector[0], vector[1]],
        "llj1": [vector[1], vector[0]],
        "rlj3": [vector[2], vector[3]],
        "llj3": [vector[3], vector[2]],
        "rlj4": [vector[4], vector[5]],
        "llj4": [vector[5], vector[4]],
        "rlj5": [vector[6], vector[7]],
        "llj5": [vector[7], vector[6]],
        "rlj6": [vector[8], vector[9]],
        "llj6": [vector[9], vector[8]],
    }

def get_random_gain():
    return random.uniform(0.1, 6.0)



if __name__ == '__main__':
    count = 0
    swarm = [[-43.71117494941125, -37.253806767030035, 65.73678814152939, 38.40165899783605, -83.11871461926334, -72.64406921994316, 30.10046852156416, 25.04363296442947, 6.4682762216503695, -15.065550680856013], [-43.413935963793534, -37.4007298944096, 65.65347606215478, 38.18410219758236, -82.92573957675778, -72.42943194895834, 30.340643154628776, 24.63304491688649, 6.649278026552756, -15.166908457767805], [-43.79845996156174, -37.4049908433008, 65.83519778071827, 38.58952496669605, -83.02030596866034, -72.89402549798967, 30.498918429271125, 24.877729722967207, 6.723282758808907, -15.197278201570404], [-43.417228541794536, -37.07964229101438, 65.87448214692299, 38.33392980718211, -83.10125268738913, -72.7085671150846, 30.374478842600613, 24.670615533774864, 6.62260822556035, -15.02773372365308], [-43.51879276206837, -37.18877603241855, 65.60776844675186, 38.36803163921972, -83.07222977796192, -72.98893393422426, 30.260669172836916, 24.807219286798333, 6.182997657628803, -14.877641650233297], [-43.751881191849336, -37.67434416157733, 65.79608583766539, 38.410031878661854, -82.71363975248013, -72.82644066243276, 30.427985761802216, 24.798388611757186, 6.542543688012682, -14.91126862277232], [-43.84016282610258, -37.510366137509365, 65.44524365912238, 38.37537367551128, -82.90073054184754, -72.52179975849131, 30.231258526509393, 25.07133386279821, 6.7101233298563425, -14.83810538089233], [-43.78835032820402, -37.19319739095847, 65.4311665543034, 38.30582239149692, -82.87604578971508, -72.6753424043543, 30.178545594152716, 24.697866502305178, 6.486206812969566, -15.210614213032207], [-43.72890198332763, -37.34326624400392, 65.46827518602275, 38.666879238212175, -83.21806329857318, -72.66744565353098, 30.493304406864723, 24.996766164930843, 6.5644212518612965, -15.191170569499029], [-43.60793386263249, -37.25350000473644, 65.65196605778237, 38.48667256993875, -83.04873083742952, -72.69588096071564, 30.298445473970887, 24.769053547959174, 6.804092412533816, -14.88931336113016]]
    while True:
        print("Agent {}".format(count))
        agent = NaoRobot(8,'Test','localhost',3100,'rsg/agent/nao/nao.rsg',startCoordinates=[-5.5,0.9,0],debugLevel=0)
        agent.set_walk_config(congigure_vector(swarm[count]))
        time.sleep(20)
        print("Now Killing")
        print("Distance Travelled: {}".format(agent.get_distance_fitness_score()))
        agent.die()
        time.sleep(2)
        count += 1